[MASTER]
ignore=tests

[FORMAT]
indent-string='    '
indent-after-paren=4
max-line-length=155

[DESIGN]
max-args=10

[MESSAGES CONTROL]
disable=no-else-return, import-outside-toplevel, too-few-public-methods, too-many-public-methods, too-many-return-statements, no-self-use

[BASIC]

# List of builtins function names that should not be used, separated by a comma
bad-functions=

# Good variable names which should always be accepted, separated by a comma
good-names=i,j,k,t,v,ex,Run,_

# Bad variable names which should always be refused, separated by a comma
bad-names=foo,bar,baz,toto,tutu,tata

# Colon-delimited sets of names that determine each other's naming style when
# the name regexes allow several styles.
name-group=

# Include a hint for the correct naming format with invalid-name
include-naming-hint=no

# Regular expression matching correct function names
function-rgx=[a-z_][a-z0-9_]{1,40}$

# Naming hint for function names
function-name-hint=[a-z_][a-z0-9_]{1,40}$

# Regular expression matching correct variable names
variable-rgx=[a-z_][a-z0-9_]{1,40}$

# Naming hint for variable names
variable-name-hint=[a-z_][a-z0-9_]{1,40}$

# Regular expression matching correct constant names
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Naming hint for constant names
const-name-hint=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Regular expression matching correct attribute names
attr-rgx=[a-z_][a-z0-9_]{1,}$

# Naming hint for attribute names
attr-name-hint=[a-z_][a-z0-9_]{1,}$

# Regular expression matching correct argument names
argument-rgx=[a-z_][a-z0-9_]{1,40}$

# Naming hint for argument names
argument-name-hint=[a-z_][a-z0-9_]{1,40}$

# Regular expression matching correct class attribute names
class-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{1,40}|(__.*__))$

# Naming hint for class attribute names
class-attribute-name-hint=([A-Za-z_][A-Za-z0-9_]{1,40}|(__.*__))$

# Regular expression matching correct inline iteration names
inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$

# Naming hint for inline iteration names
inlinevar-name-hint=[A-Za-z_][A-Za-z0-9_]*$

# Regular expression matching correct class names
class-rgx=[A-Z_][a-zA-Z0-9]*$

# Naming hint for class names
class-name-hint=[A-Z_][a-zA-Z0-9]*$

# Regular expression matching correct module names
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Naming hint for module names
module-name-hint=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Regular expression matching correct method names
method-rgx=[a-z_][a-z0-9_]{1,}$

# Naming hint for method names
method-name-hint=[a-z_][a-z0-9_]{1,}$

# Regular expression which should only match function or class names that do
# not require a docstring.
no-docstring-rgx=__.*__

# Minimum line length for functions/classes that require docstrings, shorter
# ones are exempt.
docstring-min-length=-1

# List of decorators that define properties, such as abc.abstractproperty.
property-classes=abc.abstractproperty
